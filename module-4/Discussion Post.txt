Topic Chosen: Version Control
	I selected this topic for several reasons; I use it every day at work to make changes to code and collaborate with my team. Additionally, the fact that we have already discussed version control in Intro to Programming allows me to do this one more easily.
	This topic is designed to convince you that version control is necessary and that you should never do software development without it. If you do so, you are just asking to get hurt and start crying once you make a mistake that you can't come back from.
	From personal experience, version control is my friend and will always be a valuable tool. Now, there may be times when I have disagreements with version control (Merge Conflicts). There are ways to work through those issues. One of the most incredible things I love about GitHub and Azure DevOps (ADO) is pipeline builds (GitHub actions). The fact that you can have an outside source develop your code and prove that it is buildable is great. I have had to deal with the issue where I can build on my machine, and ADO can build. But another developer is unable to. It is easier to figure out the issue and/or fix the problem when your code version control can build.
	The article I found is actually from Stack Overflow. The answer provides different reasons why it is a good idea to use source control. The scenarios described by the writer in the answer to the question perfectly capture typical occurrences in software development. Out of all five scenarios discussed, scenarios 3, 4, and 5 all happened to me within the last week. If I had not had version control available, I probably would have started to cry. I also completed scenario one just over two weeks ago. 

Mhd. (2009, February 18). Why should my team adopt source control? Stack Overflow. https://stackoverflow.com/questions/559332/why-should-my-team-adopt-source-control