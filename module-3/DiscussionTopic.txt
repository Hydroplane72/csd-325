Topic Chosen: Reversibility
	I selected this topic because it is something I am currently working on in a project. My project involves converting approximately 20 years' worth of Desktop applications into web applications. The tricky part is that as we convert functionality to the web. We still need to support the desktop version of these applications as well.
	This topic primarily focuses on the importance of always keeping in mind that code is not permanent and requirements change quickly. Another key point made is to avoid chasing the latest and greatest technologies. Instead, use the "boring" technologies. By using boring technologies, you tend to have a smaller tech stack to support. What I mean by "boring technologies" is using various, random third-party technologies to "help" you in your tech stack. This is because 3rd party technologies are not guaranteed to be available.
	For instance, there is a 3rd party technology called "Mediator". Initially, they were free to use and easy to implement the technology to help you maintain clean code. Recently, the creators of Mediator decided to make newer versions require a license. Of course, that means we can no longer upgrade to the latest and safest version of Mediator anymore. In fact, a project is underway to remove Mediator from the tech stack gradually.

I don't really need a second resource to discuss this topic. So instead, I found a random article about the use of boring technology. The article primarily focuses on this guy's mistakes as a software developer. I liked it because of the funny pictures that are part of the article.
Choose Boring Technology. (2025). Boringtechnology.club. https://boringtechnology.club/